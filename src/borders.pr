{*

Generate all border tokens as named variables.
Tokens are named by their group path and then name, 
and their value rendered using `rendered-border` blueprint

*}
{[ global CURRENT_TYPE = "Border" /]}
{[ const colorBehavior = getBehavior("color") /]}
{[ const measureBehavior = getBehavior("measure") /]}
{[ const behavior = getBehavior(CURRENT_TYPE) /]}

{[ let brand = ds.currentBrand() /]}
{[ const group = ds.tokenGroupTreeByType(CURRENT_TYPE, brand.id) /]}

import { {{ colorBehavior.varName }}, {{ colorBehavior.itemTypeName }} } from './{{ colorBehavior.fileName }}';
import { {{ measureBehavior.varName }}, {{ measureBehavior.itemTypeName }} } from './{{ measureBehavior.fileName }}';

export type {{ behavior.itemTypeName }} = {
  color: {{ colorBehavior.itemTypeName }},
  width: {{ measureBehavior.itemTypeName }},
  position: string;
};

export type {{ behavior.typeName }} = {[ inject "rendered-group-type" context group /]};

export type Custom{{ behavior.typeName }} = {[ inject "rendered-group-custom-type" context group /]};

export const {{ behavior.varName }}: {{ behavior.typeName }} = {[ inject "rendered-group-content" context group /]};